/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImageEntity
 */
export interface ImageEntity {
    /**
     * 
     * @type {number}
     * @memberof ImageEntity
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    type?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ImageEntity
     */
    image?: Array<string>;
}

/**
 * Check if a given object implements the ImageEntity interface.
 */
export function instanceOfImageEntity(value: object): value is ImageEntity {
    return true;
}

export function ImageEntityFromJSON(json: any): ImageEntity {
    return ImageEntityFromJSONTyped(json, false);
}

export function ImageEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'image': json['image'] == null ? undefined : json['image'],
    };
}

export function ImageEntityToJSON(json: any): ImageEntity {
    return ImageEntityToJSONTyped(json, false);
}

export function ImageEntityToJSONTyped(value?: ImageEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': value['type'],
        'image': value['image'],
    };
}

